ppoatm: Adapt to support Broadcom PPPoATM

Adapt ppoatm plugin to support Broadcom BSP. This patch is based on the
changes that Broadcom does in their bcm963xx SDK 5.04L.02p1 at
   userspace/gpl/apps/ppp/ppp-2.4.8/pppd/plugins/pppoatm/pppoatm.c
compared to vanilla upstream ppp-2.4.8.

It makes PPPoATM work on Broadcom platforms.

Signed-off-by: Andreas Gnau <andreas.gnau@iopsys.eu>

diff --git a/pppd/plugins/pppoatm/pppoatm.c b/pppd/plugins/pppoatm/pppoatm.c
index d60f39d..c6e780c 100644
--- a/pppd/plugins/pppoatm/pppoatm.c
+++ b/pppd/plugins/pppoatm/pppoatm.c
@@ -22,6 +22,7 @@
 #include "lcp.h"
 #include <atm.h>
 #include <linux/atmdev.h>
+#include <linux/bcm_atmdev.h>
 #include <linux/atmppp.h>
 #include <sys/stat.h>
 #include <net/if.h>
@@ -69,21 +70,30 @@ int (*old_setdevname_hook)(const char* cp) = NULL;
 static int setdevname_pppoatm(const char *cp, const char **argv, int doit)
 {
 	struct sockaddr_atmpvc addr;
+	char *pvc;
 	extern struct stat devstat;
 	if (device_got_set)
 		return 0;
 	//info("PPPoATM setdevname_pppoatm: '%s'", cp);
 	memset(&addr, 0, sizeof addr);
-	if (text2atm(cp, (struct sockaddr *) &addr, sizeof(addr),
-	    T2A_PVC | T2A_NAME | T2A_WILDCARD) < 0) {
+
+	if ((pvc = strchr(cp, '.')) == NULL)
+		return 0;
+
+	if (text2atm(pvc+1, (struct sockaddr *) &addr, sizeof(addr),
+	    T2A_PVC | T2A_NAME) < 0) {
                if(doit)
                    info("atm does not recognize: %s", cp);
 		return 0;
            }
+
 	if (!doit) return 1;
 	//if (!dev_set_ok()) return -1;
+
+	strncpy(devnam, cp, (pvc-cp));
+	devnam[pvc-cp] = '\0';
+
 	memcpy(&pvcaddr, &addr, sizeof pvcaddr);
-	strlcpy(devnam, cp, sizeof devnam);
 	devstat.st_mode = S_IFSOCK;
 	if (the_channel != &pppoa_channel) {
 		the_channel = &pppoa_channel;
@@ -108,7 +118,7 @@ static void no_device_given_pppoatm(void)
 static void set_line_discipline_pppoatm(int fd)
 {
 	struct atm_backend_ppp be;
-	be.backend_num = ATM_BACKEND_PPP;
+	be.backend_num = ATM_BACKEND_PPP_BCM;
 	if (!llc_encaps)
 		be.encaps = PPPOATM_ENCAPS_VC;
 	else if (!vc_encaps)
@@ -163,7 +173,14 @@ static int connect_pppoatm(void)
 
 static void disconnect_pppoatm(void)
 {
-	close(pppoa_fd);
+	if (pppoa_fd > 0) {
+		struct atm_backend_ppp be;
+		be.backend_num = ATM_BACKEND_PPP_BCM_CLOSE_DEV;
+		if (ioctl(pppoa_fd, ATM_SETBACKEND, &be) < 0)
+		fatal("ioctl(ATM_SETBACKEND): %m");
+		close(pppoa_fd);
+		pppoa_fd= -1;
+	}
 }
 
 void plugin_init(void)
-- 
2.32.0

