--- a/include/curl/easy.h
+++ b/include/curl/easy.h
@@ -61,6 +61,18 @@
 CURL_EXTERN CURL *curl_easy_duphandle(CURL *curl);
 
 /*
+ * NAME curl_easy_reset_no_auth()
+ *
+ * DESCRIPTION
+ *
+ * Re-initializes a CURL handle to the default values expecting authentication values. This puts back the
+ * handle to the same state as it was in when it was just created.
+ *
+ * It does keep: live connections, the Session ID cache, the DNS cache and the
+ * cookies.
+ */
+CURL_EXTERN void curl_easy_reset_no_auth(struct Curl_easy *data);
+/*
  * NAME curl_easy_reset()
  *
  * DESCRIPTION
--- a/lib/easy.c
+++ b/lib/easy.c
@@ -965,6 +965,34 @@
 
 /*
  * curl_easy_reset() is an external interface that allows an app to re-
+ * initialize a session handle to the default values with initializing authentication values.
+ */
+void curl_easy_reset_no_auth(struct Curl_easy *data)
+{
+  Curl_safefree(data->state.pathbuffer);
+
+  data->state.path = NULL;
+
+  Curl_free_request_state(data);
+
+  /* zero out UserDefined data: */
+  Curl_freeset(data);
+  memset(&data->set, 0, sizeof(struct UserDefined));
+  (void)Curl_init_userdefined(&data->set);
+
+  /* zero out Progress data: */
+  memset(&data->progress, 0, sizeof(struct Progress));
+
+  /* zero out PureInfo data: */
+  Curl_initinfo(data);
+
+  data->progress.flags |= PGRS_HIDE;
+  data->state.current_speed = -1; /* init to negative == impossible */
+
+}
+
+/*
+ * curl_easy_reset() is an external interface that allows an app to re-
  * initialize a session handle to the default values.
  */
 void curl_easy_reset(struct Curl_easy *data)
